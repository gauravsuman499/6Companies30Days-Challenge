//## Q-01:- find-first-and-last-position-of-element-in-sorted-array.

Solution Code:-
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        // vector<int> ans ;
        int n = nums.size() ;
        int s = 0, e = n- 1 ;
        int first = -1 , last = -1 ;

        //first index
        while( s <= e){
            int mid = s+(e-s)/2 ;

            if( nums[mid] == target){
                first = mid  ;
                e = mid -1 ;
            }
            else if(nums[mid] < target){
                s = mid +1  ;
            }
            else
                e = mid -1  ;
        }
        s = 0, e = n-1 ;
// last index
      while( s <= e){
            int m = s+(e-s)/2 ;

            if( nums[m] == target){
                last = m  ;
                s = m + 1 ;
            }
            else if(nums[m] < target){
                s = m +1  ;
            }
            else
                e = m -1  ;
        }

        return {first, last} ;
    }
};

T->O(log N)
S->O(1)
