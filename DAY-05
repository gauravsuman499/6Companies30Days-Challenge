//#Q01:- Binary Search

Solution Code:-

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size() ;
        int s = 0, e = n-1 ;
        while( s<= e){
            int mid = s+(e-s)/2  ;

            if(nums[mid] == target)
                return mid  ;
            else if(nums[mid] > target)
                e =  mid - 1 ;
            else
                s =  mid + 1 ;
        }
        return -1  ;
    }
};

T->O(logN)
S->O(1)


//###Q-02:-Search Insert Position.

Solution Code:-
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int n = nums.size() ;
        int ans  = -1 ;
        int s = 0 , e  = n-1  ;
        while(s <= e){
            int mid = s+(e-s)/2 ;
            if(nums[mid] == target)
                return mid ;
            else if( nums[mid] < target ){
                s = mid+1  ;
            }
            else{
                e = mid-1 ;
            }
        }
        return s ;
    }
};

T->O(logN)
S->O(1) 

